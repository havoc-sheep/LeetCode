class Solution {
    public void nextPermutation(int[] nums) {
        int i = nums.length - 2;
        //从后往前，如果前面一个比后面一个小就结束
        while(i >= 0 && nums[i] >= nums[i+1]){
            i--;
        }
        if(i >= 0){
            //从找到的数，一路向后，直到有比找到的数小
            int j = i+1;
            while(j < nums.length && nums[j] > nums[i]){
               j++; 
            }
            j--;
            swap(nums, i, j);
            //从后往前，与上面相反
            //  int j = nums.length - 1;
            //  while (j >= 0 && nums[j] <= nums[i]) {
            //      j--;
            // }
            // swap(nums, i, j);
        }
        reverse(nums, i+1);
    }
    
    public void reverse(int[] nums, int index){
        if(nums.length <= 1) return;
        int j =nums.length - 1;
        while(j > index){
            swap(nums, j, index);
            j--;
            index++;
        }
    }
    
    public void swap(int[] nums,int a, int b){
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }
}
